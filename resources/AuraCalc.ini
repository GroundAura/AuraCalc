#================================================================================================#
#									SETTINGS													 #
#================================================================================================#

[WIN_BASIC]
# Settings for the basic view.

# The minimum height that the window can be resized to.
# Integer. Must be positive. Default: `110`.
iMinHeight = 110

# The minimum width that the window can be resized to.
# Integer. Must be positive. Default: `250`.
iMinWidth = 250

# The starting height of the window.
# Integer. Must be positive and not smaller than `iMinHeight`. Default: `110`.
iDefaultHeight = 110

# The starting width of the window.
# Integer. Must be positive and not smaller than `iMinWidth`. Default: `250`.
iDefaultWidth = 250



[WIN_ADV]
# Settings for the advanced view.

# The minimum height that the window can be resized to.
# Integer. Must be positive. Default: `410`.
iMinHeight = 410

# The minimum width that the window can be resized to.
# Integer. Must be positive. Default: `400`.
iMinWidth = 400

# The starting height of the window.
# Integer. Must be positive and not smaller than `iMinHeight`. Default: `410`.
iDefaultHeight = 410

# The starting width of the window.
# Integer. Must be positive and not smaller than `iMinWidth`. Default: `400`.
iDefaultWidth = 400



[WIN_POS]
# Settings for the window position.

# Whether to center the window on the screen on startup.
# Boolean. Default `True`.
bCenterWindow = True

# The starting x-offset of the window. Ignored if `bCenterWindow` is `True`.
# Integer. Must be positive. Default `100`.
iXOffset = 100

# The starting y-offset of the window. Ignored if `bCenterWindow` is `True`.
# Integer. Must be positive. Default `100`.
iYOffset = 100



[WIN_FLAGS]
# Settings for the window flags.

# Whether to pin the window to the front of the screen on startup.
# Boolean. Default: `False`.
bStartPinned = False

# Whether to expand the advanced view on startup.
# Boolean. Default: `False`.
bStartExpanded = False



#[WIN_RESTORE] # Unimplemented
# Settings for the window restore mode.

# Whether to save certain properties on shutdown and restore them on startup.
# Boolean. Default: `False`.
#bRestoreMode = False # Unimplemented

# Whether to save and restore window dimensions. Ignored if `bRememberMode` is `False`.
# Boolean. Default: `True`.
#bRestoreDimensions = True # Unimplemented

# Whether to save and restore window position. Ignored if `bRememberMode` is `False`.
# Boolean. Default: `True`.
#bRestorePosition = True # Unimplemented

# Whether to save and restore window pinned state. Ignored if `bRememberMode` is `False`.
# Boolean. Default: `True`.
#bRestorePinned = True # Unimplemented

# Whether to save and restore advanced view state. Ignored if `bRememberMode` is `False`.
# Boolean. Default: `True`.
#bRestoreAdvanced = True # Unimplemented



[CALCULATION]
# Settings for calculation.

# How many decimal places to use during calculations.
# Integer. Must be positive. Default: `100`.
iDecimalPrecision = 100

# How many decimal places to display in the result.
# Integer. Must be positive and not larger than `iDecimalPrecision`. Default: `20`.
iDecimalDisplay = 10

# Whether to only simplify the expression and don't evaluate it.
# Boolean. Default: `False`.
bOnlySimplify = False

# Whether to calculate the expression in real time.
# Boolean. Default: `True`.
bLiveEval = True

# How long, in milliseconds, to wait for the user to finish typing an equation before displaying an error, if any. Ignored if `bLiveEval` is `False`.
# Integer. Must be positive. Default: `1000`.
iTimeoutDelay = 1000



[KEYBINDS]
# Settings for keybinds.

# The keybind to toggle the advanced view.
# String. Must be a valid Tkinter event. Default: `<F3>`.
sAdvancedKey = <F3>

# The keybind to clear the expression and result.
# String. Must be a valid Tkinter event. Default: `<Alt-BackSpace>`.
sClearKey = <Alt-BackSpace>

# The keybind to delete all text to the left of the cursor.
# String. Must be a valid Tkinter event. Default: `<Control-BackSpace>`.
sDeleteAllLKey = <Control-BackSpace>

# The keybind to delete all text to the right of the cursor.
# String. Must be a valid Tkinter event. Default: `<Control-Delete>`.
sDeleteAllRKey = <Control-Delete>

# The keybind to delete the word to the left of the cursor.
# String. Must be a valid Tkinter event. Default: `<Shift-BackSpace>`.
#sDeleteWordLKey = <Shift-BackSpace> # Unimplemented

# The keybind to delete the word to the right of the cursor.
# String. Must be a valid Tkinter event. Default: `<Shift-Delete>`.
#sDeleteWordRKey = <Shift-Delete> # Unimplemented

# The keybind to evaluate the expression.
# String. Must be a valid Tkinter event. Default: `<Enter>`.
sEvaluateKey = <Enter>

# The keybind to toggle the help view.
# String. Must be a valid Tkinter event. Default: `<F1>`.
#sHelpKey = <F1> # Unimplemented

# The keybind to toggle the options view.
# String. Must be a valid Tkinter event. Default: `<F2>`.
#sOptionsKey = <F2> # Unimplemented

# The keybind to redo the last action.
# String. Must be a valid Tkinter event. Default: `<Control-y>`.
#sRedoKey = <Control-y> # Unimplemented

# The keybind to undo the last action.
# String. Must be a valid Tkinter event. Default: `<Control-z>`.
#sUndoKey = <Control-z> # Unimplemented

# The keybind to quit the application.
# String. Must be a valid Tkinter event. Default: `<Escape>`.
sQuitKey = <Escape>



[DEBUG]
# Settings for debugging.

# Whether to log debug messages. Logs to `./resources/debug.log` as well as console if available.
# Boolean. Default: `False`.
bDebugMode = False

# Whether to force focus on the window on startup. Try this if the window isn't getting focused on startup.
# Boolean. Default: `False`.
bForceFocus = False

# Whether to sanitize user input to only allow certain characters and functions. May cause unexpected behavior.
# Boolean. Default: `True`.
bSanitizeInput = True


